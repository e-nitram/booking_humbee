import {
  Card,
  Checkbox,
  FormControlLabel,
  Link,
  OutlinedInput,
  Stack,
  Typography,
  styled,
} from "@mui/material";
import React from "react";
import { useCheckOutContext } from "../../context/CheckoutContext";

export const PizzarItem = ({
  element,
  handleShow,
  activeIndex,
  setCheckout,
  setCheckoutAccount,
  index,
}) => {
  const [order, setOrder] = useCheckOutContext();
  const [addNote, setAddNote] = React.useState(element.addNote ? 0 : 1);
  const [note, setNote] = React.useState(element.addNote);
  const [noteFlag, setNoteFlag] = React.useState(1);
  const [count, setCount] = React.useState(0);

  const supplementPrices = {
    "Extra mozzarella": 1.00,
    "Extra rucola": 1.00,
    "Extra prosciuto": 1.00,
    "Extra olives": 1.00,
  };

  const handleChange = (e, value) => {
    if (e.target.checked) {
      let data = order;
      data.orderItem = [
        ...data.orderItem.map((item, id) =>
          item.name === element.name
            ? { ...item, subname: [...item.subname, value] }
            : item
        ),
      ];
      setOrder({ ...data });
    } else {
      let data = order;
      data.orderItem = [
        ...data.orderItem.map((item, id) =>
          item.name === element.name
            ? {
              ...item,
              subname: [...item.subname.filter((ele) => ele !== value)],
            }
            : item
        ),
      ];
      setOrder({ ...data });
    }
  };

  return (
    <CardItem
      onClick={(e) => handleShow(e, index)}
    >
      <Stack
        direction={"row"}
        sx={{
          color: "rgba(0, 0, 0, 0.87)",
          display: "flex",
          justifyContent: "space-between",
        }}
      >
        <Typography
          sx={{
            fontFamily: "Poppins",
            fontWeight: 600,
            fontSize: "14px",
          }}
        >
          {element.name}
        </Typography>
        <Typography
          sx={{
            fontFamily: "Poppins",
            fontWeight: 600,
            fontSize: "14px",
          }}
        >
          â‚¬ {element.price}
        </Typography>
      </Stack>
      <Stack
        sx={{
          marginBottom: "5px",
        }}
      >
        <Typography
          sx={{
            fontFamily: "DM Sans",
            fontSize: "14px",
            color: "rgba(0, 0, 0, 0.6)",
          }}
        >
          {element.addFood}
        </Typography>
        <Typography
          sx={{
            fontFamily: "DM Sans",
            fontSize: "14px",
            color: "rgba(0, 0, 0, 0.6)",
            fontStyle: "italic",
          }}
        >
          Choice of : supplements
        </Typography>
      </Stack>
      <Icons direction={"row"} spacing={0.5}>
        <svg
          width="16"
          height="14"
          viewBox="0 0 16 14"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M4.60559 6.5357C4.65688 6.48416 4.7184 6.44268 4.78665 6.41363C4.85489 6.38459 4.92851 6.36854 5.00331 6.36642C5.0781 6.36429 5.15261 6.37612 5.22257 6.40124C5.29254 6.42635 5.35658 6.46426 5.41106 6.51279C8.03292 8.84909 10.6637 10.2705 13.7595 10.9951C14.1772 9.9172 14.2142 8.73086 13.8535 7.57349C13.3749 6.03785 12.2604 4.69994 10.6313 3.70459C9.17703 2.81601 7.72348 2.58461 6.3173 2.36095C4.54327 2.07868 2.86753 1.8119 1.26834 0.210248C1.0903 0.0330721 0.847804 -0.0380003 0.615991 0.0195987C0.351063 0.086966 0.173376 0.285026 0.0882708 0.612431C-0.111138 1.37873 0.0170534 3.5264 0.57789 5.79365C1.47843 9.4362 2.9156 11.2794 3.96285 12.1844C5.31598 13.3529 7.08288 14 8.83875 14C9.16972 14.0005 9.50026 13.9775 9.8276 13.9313C11.3128 13.7184 12.5492 13.0127 13.246 11.986C10.0594 11.2019 7.33713 9.71072 4.62873 7.29863C4.57416 7.25003 4.53026 7.19172 4.49956 7.12704C4.46885 7.06236 4.45194 6.99258 4.44979 6.92171C4.44764 6.85083 4.46029 6.78026 4.48703 6.71402C4.51376 6.64778 4.55405 6.58718 4.60559 6.5357Z"
            fill="#444254"
          />
          <path
            d="M15.5047 11.3252C14.9054 11.2379 14.325 11.1285 13.7599 10.9961C13.6437 11.2961 13.4991 11.5856 13.3279 11.8611C13.3019 11.9032 13.2742 11.945 13.246 11.986C13.9334 12.1544 14.6297 12.2893 15.3316 12.3902C15.4063 12.4027 15.4829 12.4009 15.5568 12.3849C15.6308 12.369 15.7006 12.3392 15.7622 12.2975C15.8239 12.2557 15.876 12.2026 15.9157 12.1415C15.9554 12.0804 15.9818 12.0124 15.9934 11.9415C16.0049 11.8706 16.0014 11.7982 15.983 11.7286C15.9646 11.659 15.9316 11.5936 15.8862 11.5362C15.8407 11.4788 15.7836 11.4306 15.7181 11.3943C15.6527 11.3581 15.5799 11.3346 15.5047 11.3252Z"
            fill="#444254"
          />
        </svg>
        <svg
          width="16"
          height="16"
          viewBox="0 0 16 16"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8Z"
            fill="#444254"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M11.4558 7.88785C12.2665 7.88815 12.8278 8.3405 13.5544 8.72757C14.201 8.99037 15.0934 8.86746 15.0934 8.86746L14.5338 9.84715C14.5338 9.84715 13.6494 9.67436 12.5751 10.127C11.6069 10.5095 10.7153 10.573 10.4764 10.5469C10.1668 10.573 9.48013 10.5281 9.07737 9.70715C8.80802 8.93188 8.79757 7.60798 8.79757 7.60798V6.76826C8.79757 6.76826 8.65587 7.72266 8.37783 8.72754C8.12144 9.26923 8.01294 9.57301 7.67829 9.98699C7.26683 10.4602 6.69291 10.8002 6.13935 10.9666C5.19144 11.1956 4.18058 11.1066 4.18058 11.1066C4.18058 11.1066 5.27761 10.749 5.99941 10.2668C6.71867 9.82962 7.59514 9.26919 8.09803 8.02778C8.57135 6.707 8.66426 5.20564 8.79757 4.94899C9.04868 4.77533 9.18902 5.44812 9.21732 5.78861C9.23108 6.18358 9.35718 8.02778 9.35718 8.02778C9.35718 8.02778 9.42061 9.42575 9.91686 9.70709C10.3626 9.86933 11.4009 9.79046 12.0155 9.56711C12.6281 9.41004 12.715 9.28724 12.715 9.28724C12.715 9.28724 11.533 8.58117 10.8962 8.86738C10.3219 9.09552 10.0848 9.41005 10.0567 9.42721C10.0848 9.41003 10.5906 7.88807 11.4558 7.88777L11.4558 7.88785ZM5.15989 5.64879C5.15989 5.64879 4.99154 6.78359 5.57964 7.04823C6.18119 7.36363 6.44127 7.33152 6.69893 7.74796C7.03054 8.03699 7.39847 9.00741 7.39847 9.00741C7.39847 9.00741 7.53832 8.06873 7.11868 7.1881C6.64799 6.39164 5.15991 5.64876 5.15991 5.64876L5.15989 5.64879ZM3.97502 4.6691L4.52778 3.96937C4.52778 3.96937 4.60995 4.36452 4.74014 4.57411C4.87033 4.78379 5.08054 4.94906 5.08054 4.94906C5.08054 4.94906 4.80417 5.38142 4.80417 5.81922C4.80417 6.25702 5.18352 7.60796 5.18352 8.31998C5.18352 8.31998 5.19992 8.74579 5.15649 9.50839C5.15649 9.50839 5.15171 9.89466 4.68657 10.5398C4.68657 10.5398 4.08784 11.2466 2.86942 11.2466C2.86942 11.2466 1.93965 11.1942 1.46839 10.6867C1.46839 10.6867 1.18245 10.4425 1.1026 9.85765C1.1026 9.85765 1.1026 9.56714 1.23211 9.16427C1.23211 9.16427 1.40407 8.73299 1.76388 8.16769C1.76388 8.16769 1.23805 9.16857 1.46838 9.75534C1.6986 10.342 2.44781 10.4741 2.86941 10.4741C3.29111 10.4741 3.83587 10.3252 4.25337 10.014C4.74015 9.65101 4.68659 8.82818 4.68659 8.31998C4.68659 7.81178 4.4352 6.54138 4.4352 6.54138C4.38338 6.19522 4.14857 5.43 4.11324 5.2289C4.07781 5.02781 3.97505 4.66907 3.97505 4.66907L3.97502 4.6691Z"
            fill="white"
          />
        </svg>
        <svg
          width="19"
          height="15"
          viewBox="0 0 19 15"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M3.14728 9.01235C3.18878 8.98718 3.23553 8.96997 3.28484 8.96172C3.33415 8.95346 3.38506 8.95433 3.43467 8.96426C3.48428 8.97419 3.53161 8.99299 3.57396 9.01959C3.61631 9.0462 3.65285 9.08008 3.6815 9.1193C5.06017 11.0073 6.58141 12.3123 8.51325 13.2424C8.94957 12.617 9.15124 11.8648 9.08648 11.0711C9.00057 10.018 8.46601 8.99515 7.54119 8.11349C6.71563 7.32642 5.79234 6.95922 4.8991 6.60412C3.77222 6.15606 2.70778 5.73273 1.89327 4.46831C1.80242 4.32827 1.65324 4.24627 1.49187 4.24807C1.30722 4.25111 1.16053 4.3508 1.05552 4.54709C0.809609 5.00646 0.573165 6.39762 0.603962 7.93046C0.653113 10.393 1.32477 11.7873 1.87965 12.5234C2.59674 13.474 3.66442 14.154 4.82151 14.4191C5.03954 14.4693 5.2608 14.5045 5.48342 14.5244C6.49399 14.6126 7.41416 14.3485 8.0268 13.7979C6.04403 12.816 4.4729 11.4527 3.04853 9.50317C3.01983 9.46389 2.99962 9.42001 2.98905 9.37406C2.97848 9.32812 2.97776 9.28099 2.98693 9.2354C2.9961 9.18981 3.01499 9.14664 3.04251 9.10836C3.07002 9.07009 3.10563 9.03746 3.14728 9.01235Z"
            fill="#444254"
          />
          <path
            d="M9.61398 13.7167C9.23209 13.5705 8.86595 13.4129 8.51333 13.2431C8.39194 13.4172 8.25341 13.5803 8.09944 13.7304C8.07602 13.7534 8.05171 13.7759 8.02703 13.7979C8.45483 14.0092 8.89332 14.2004 9.34078 14.3708C9.38815 14.39 9.43887 14.4004 9.48998 14.4014C9.54108 14.4024 9.59154 14.394 9.6384 14.3766C9.68526 14.3592 9.72758 14.3332 9.76287 14.3001C9.79816 14.2671 9.82571 14.2276 9.84391 14.1841C9.86211 14.1405 9.87059 14.0938 9.86886 14.0465C9.86713 13.9993 9.85522 13.9526 9.83383 13.909C9.81243 13.8655 9.78199 13.8261 9.74428 13.793C9.70657 13.76 9.66235 13.7341 9.61421 13.7167L9.61398 13.7167Z"
            fill="#444254"
          />
          <path
            d="M15.8413 6.14332C15.7876 6.12675 15.7306 6.12064 15.6735 6.12533C15.6164 6.13002 15.5602 6.14543 15.5083 6.17067C15.4564 6.19592 15.4097 6.23051 15.3709 6.27246C15.3321 6.31441 15.302 6.36291 15.2823 6.41518C14.3317 8.93131 13.0453 10.8316 11.1895 12.4263C10.5153 11.846 10.0622 11.0565 9.89162 10.1447C9.66521 8.93495 9.94498 7.63208 10.7001 6.37743C11.3742 5.2574 12.2847 4.58227 13.1656 3.92928C14.277 3.10541 15.3267 2.32708 15.8427 0.672864C15.9006 0.489467 16.0408 0.354868 16.2201 0.311141C16.4255 0.26221 16.6185 0.33283 16.7947 0.523996C17.2073 0.971348 17.894 2.47023 18.328 4.20436C19.0255 6.99023 18.7073 8.75006 18.3175 9.73605C17.8135 11.0094 16.8385 12.0776 15.6378 12.704C15.4117 12.8224 15.1774 12.9248 14.9369 13.0102C13.8445 13.3961 12.7446 13.3597 11.898 12.9136C13.7943 11.2462 15.1182 9.26607 16.1006 6.6678C16.1203 6.61544 16.1293 6.56033 16.127 6.50561C16.1247 6.45089 16.1111 6.39764 16.087 6.34892C16.0629 6.3002 16.0288 6.25696 15.9867 6.22168C15.9445 6.1864 15.8951 6.15978 15.8413 6.14332Z"
            fill="#444254"
          />
          <path
            d="M10.1152 13.2722C10.4935 12.9994 10.851 12.7183 11.1897 12.4271C11.3773 12.5886 11.5805 12.733 11.7969 12.8583C11.8299 12.8775 11.8639 12.8958 11.898 12.9136C11.4886 13.2727 11.0611 13.6124 10.6175 13.9311C10.5709 13.9662 10.5179 13.9923 10.4616 14.0079C10.4053 14.0235 10.3468 14.0282 10.2896 14.022C10.2324 14.0157 10.1776 13.9984 10.1284 13.9712C10.0793 13.944 10.0367 13.9074 10.0032 13.8636C9.96978 13.8197 9.9461 13.7695 9.9336 13.7158C9.9211 13.6622 9.92002 13.6062 9.93042 13.5511C9.94082 13.4961 9.9625 13.443 9.99419 13.3952C10.0259 13.3473 10.0672 13.3054 10.1152 13.2722Z"
            fill="#444254"
          />
          <path
            d="M3.36992 0.0308102C3.43912 0.0308102 3.48741 0.099411 3.46405 0.164555L2.56658 2.66815C2.55233 2.70789 2.51466 2.7344 2.47245 2.7344H1.78027C1.73806 2.7344 1.70039 2.70789 1.68614 2.66815L0.788667 0.164555C0.765314 0.0994108 0.813598 0.0308102 0.882801 0.0308102H1.37693C1.42002 0.0308102 1.45827 0.0584175 1.47184 0.0993189L2.03172 1.78675C2.062 1.87801 2.19105 1.87812 2.22149 1.78691L2.78469 0.0991559C2.79832 0.0583378 2.83652 0.0308102 2.87955 0.0308102H3.36992Z"
            fill="#444254"
          />
          <path
            d="M4.51293 0.558434C4.4577 0.558434 4.41293 0.603206 4.41293 0.658434V1.00531C4.41293 1.06054 4.4577 1.10531 4.51293 1.10531H5.20425C5.25948 1.10531 5.30425 1.15009 5.30425 1.20531V1.51368C5.30425 1.56891 5.25948 1.61368 5.20425 1.61368H4.51293C4.4577 1.61368 4.41293 1.65845 4.41293 1.71368V2.10678C4.41293 2.16201 4.4577 2.20678 4.51293 2.20678H5.32102C5.37625 2.20678 5.42102 2.25155 5.42102 2.30678V2.6344C5.42102 2.68963 5.37625 2.7344 5.32102 2.7344H3.84736C3.79213 2.7344 3.74736 2.68963 3.74736 2.6344V0.13081C3.74736 0.0755817 3.79213 0.0308102 3.84736 0.0308102H5.32102C5.37625 0.0308102 5.42102 0.0755817 5.42102 0.13081V0.458434C5.42102 0.513663 5.37625 0.558434 5.32102 0.558434H4.51293Z"
            fill="#444254"
          />
          <path
            d="M7.68329 0.885792C7.64678 0.885792 7.61386 0.865385 7.59268 0.835646C7.54608 0.770189 7.48519 0.718865 7.41002 0.681674C7.3192 0.632892 7.21151 0.6085 7.08696 0.6085C6.87159 0.6085 6.69903 0.679107 6.56929 0.82032C6.43955 0.958966 6.37468 1.14511 6.37468 1.37875C6.37468 1.6278 6.44214 1.82293 6.57708 1.96415C6.7146 2.10279 6.90273 2.17212 7.14145 2.17212C7.30492 2.17212 7.44245 2.13104 7.55403 2.04888C7.63424 1.99115 7.69909 1.91568 7.74856 1.82247C7.78062 1.76207 7.73231 1.69456 7.66392 1.69456H7.05851C7.00329 1.69456 6.95851 1.64979 6.95851 1.59456V1.3093C6.95851 1.25407 7.00329 1.2093 7.05851 1.2093H8.30643C8.36166 1.2093 8.40643 1.25407 8.40643 1.3093V1.80697C8.40643 1.81671 8.40504 1.8264 8.40212 1.83568C8.35229 1.99468 8.26939 2.14277 8.15343 2.27995C8.03667 2.42116 7.88746 2.53542 7.70582 2.62271C7.52419 2.71001 7.3192 2.75366 7.09085 2.75366C6.82099 2.75366 6.57967 2.69589 6.36689 2.58035C6.15671 2.46224 5.99194 2.29921 5.87258 2.09124C5.75581 1.88327 5.69743 1.64578 5.69743 1.37875C5.69743 1.11173 5.75581 0.874238 5.87258 0.66627C5.99194 0.455734 6.15671 0.292696 6.36689 0.177158C6.57708 0.0590528 6.8171 0 7.08696 0C7.41391 0 7.68896 0.0783091 7.91211 0.234927C8.10318 0.36748 8.23941 0.543252 8.32081 0.762242C8.34364 0.82366 8.29567 0.885792 8.23014 0.885792H7.68329Z"
            fill="#444254"
          />
          <path
            d="M10.4563 2.32446C10.4425 2.28401 10.4045 2.25684 10.3617 2.25684H9.48489C9.44214 2.25684 9.40412 2.28401 9.39028 2.32446L9.27309 2.66679C9.25925 2.70723 9.22123 2.7344 9.17848 2.7344H8.69628C8.62681 2.7344 8.5785 2.6653 8.60236 2.60006L9.51786 0.0964671C9.53228 0.0570359 9.56979 0.0308102 9.61178 0.0308102H10.2426C10.2846 0.0308102 10.3221 0.0570359 10.3365 0.096467L11.252 2.60006C11.2759 2.6653 11.2276 2.7344 11.1581 2.7344H10.6681C10.6254 2.7344 10.5874 2.70723 10.5735 2.66679L10.4563 2.32446ZM10.122 1.74848C10.1906 1.74848 10.2388 1.681 10.2166 1.61611L10.0185 1.03686C9.98756 0.946514 9.85971 0.946739 9.82912 1.03719L9.63323 1.61644C9.6113 1.68127 9.65952 1.74848 9.72796 1.74848H10.122Z"
            fill="#444254"
          />
          <path
            d="M14.0036 2.6344C14.0036 2.68963 13.9588 2.7344 13.9036 2.7344H13.3915C13.3581 2.7344 13.3268 2.71771 13.3083 2.68992L12.408 1.3412C12.3531 1.25894 12.2248 1.29781 12.2248 1.39672V2.6344C12.2248 2.68963 12.18 2.7344 12.1248 2.7344H11.6592C11.604 2.7344 11.5592 2.68963 11.5592 2.6344V0.13081C11.5592 0.0755817 11.604 0.0308102 11.6592 0.0308102H12.1712C12.2047 0.0308102 12.2359 0.047574 12.2545 0.0754672L13.1547 1.43027C13.2095 1.51274 13.338 1.47394 13.338 1.37492V0.13081C13.338 0.0755818 13.3828 0.0308102 13.438 0.0308102H13.9036C13.9588 0.0308102 14.0036 0.0755817 14.0036 0.13081V2.6344Z"
            fill="#444254"
          />
        </svg>
      </Icons>
      {activeIndex === index ? (
        <CardAdd  onClick={(e) => e.stopPropagation()}>
          <Typography
            sx={{
              color: "rgba(0, 0, 0, 0.87)",
              fontWeight: 600,
              fontSize: "14px",
              fontFamily: "Poppins",
            }}
          >
            Supplements
          </Typography>
          <Stack>
          {Object.keys(supplementPrices).map((supplement, idx) => (
              <Item key={idx}>
                <FormControlLabel
                  sx={{
                    '& span.css-ahj2mt-MuiTypography-root': {
                      fontFamily: 'DM Sans',
                      fontSize: '14px',
                      fontWeight: 400,
                    },
                    '& .MuiTypography-root': {
                      fontFamily: 'DM Sans',
                      fontSize: '14px',
                      fontWeight: 400,
                    },
                    '& span.css-1gvrrxq-MuiButtonBase-root-MuiCheckbox-root svg': {
                      width: '20px',
                      height: '20px'
                    },
                    '& span.css-12wnr2w-MuiButtonBase-root-MuiCheckbox-root': {
                      color: 'rgba(77, 125, 107, 1)'
                    }
                  }}
                  onChange={(e) => handleChange(e, supplement)}
                  control={<Checkbox />}
                  color="success"
                  label={supplement}
                />
                <Price>+â‚¬{supplementPrices[supplement].toFixed(2)}</Price>
              </Item>
            ))}
          </Stack>

          {!addNote ? (
            <Stack
              marginTop={"10px"}
              marginBottom={"15px"}
              direction={"row"}
              justifyContent={"space-between"}
            >
              <Stack
                sx={{
                  fontFamily: "Poppins",
                  fontSize: "12px",
                  fontWeight: 600,
                }}
              >
                {note}
              </Stack>
              <Stack
                sx={{
                  cursor: "pointer",
                }}
                onClick={() => {
                  setAddNote(1);
                }}
              >
                <svg
                  width="12"
                  height="12"
                  viewBox="0 0 12 12"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M0 9.49971V11.9997H2.5L9.87333 4.62638L7.37333 2.12638L0 9.49971ZM11.8067 2.69305C12.0667 2.43305 12.0667 2.01305 11.8067 1.75305L10.2467 0.193047C9.98667 -0.0669531 9.56667 -0.0669531 9.30667 0.193047L8.08667 1.41305L10.5867 3.91305L11.8067 2.69305Z"
                    fill="#4D7D6B"
                  />
                </svg>
              </Stack>
            </Stack>
          ) : (
            <></>
          )}
          <Stack
            spacing={1}
            sx={{
              display: !addNote ? "none" : "",
              marginTop: '12px',
              marginBottom: '14px'
            }}
          >
            <Typography
              sx={{
                fontWeight: 'bold',
                fontSize: "12px",
                fontFamily: "Poppins",
                color: !noteFlag ? "rgba(0, 0, 0, 0.87)" : "rgba(64, 103, 88, 1)",
                cursor: "pointer",
              }}
              onClick={() => {
                setNoteFlag(0);
              }}
            >
              Add Note
            </Typography>

            <FormInput
              required
              placeholder="Add any extra details here"
              sx={{
                display: noteFlag ? "none" : "",
              }}
              value={note}
              onChange={(e) => {
                setNote(e.target.value);
              }}
            />
            {!noteFlag ? (
              <Stack direction={"row"} justifyContent={"space-between"}>
                <Link
                  onClick={() => {
                    setNoteFlag(1);
                  }}
                  sx={{
                    cursor: "pointer",
                    textDecoration: "none",
                    color: "rgba(77, 125, 107, 1)",
                    fontFamily: "Poppins",
                    fontSize: "13px",
                  }}
                >
                  CANCEL
                </Link>
                <Link
                  onClick={() => {
                    setAddNote(0);
                    let data = order;
                    data.orderItem = [
                      ...data.orderItem.map((item, id) =>
                        id === index ? { ...item, addNote: note } : item
                      ),
                    ];
                    setOrder({ ...data });
                  }}
                  sx={{
                    cursor: "pointer",
                    textDecoration: "none",
                    color: "rgba(77, 125, 107, 1)",
                    fontFamily: "Poppins",
                    fontSize: "13px",
                  }}
                >
                  SAVE CHANGES
                </Link>
              </Stack>
            ) : (
              <></>
            )}
          </Stack>
          <Stack
            direction={"row"}
            justifyContent={"space-between"}
            alignItems={"center"}
          >
            <Stack direction={"row"} spacing={1} justifyContent={"center"}>
              <Stack
                onClick={() => {
                  if (count > 0) {
                    setCount(count - 1);
                    let data = order;
                    data.orderItem = [
                      ...data.orderItem.map((item, id) =>
                        id === index ? { ...item, count: count - 1 } : item
                      ),
                    ];
                    setOrder({ ...data });
                  }
                }}
              >
                <svg
                  width="20"
                  height="20"
                  viewBox="0 0 20 20"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM15 11H5V9H15V11Z"
                    fill="#4D7D6B"
                  />
                </svg>
              </Stack>
              <Stack
                sx={{
                  fontFamily: "Poppins",
                  fontSize: "14px",
                  fontWeight: 600,
                }}
                alignItems={"center"}
              >
                {count}
              </Stack>
              <Stack
                onClick={() => {
                  setCount(count + 1);
                  let data = order;
                  data.orderItem = [
                    ...data.orderItem.map((item, id) =>
                      id === index ? { ...item, count: count + 1 } : item
                    ),
                  ];
                  setOrder({ ...data });
                }}
              >
                <svg
                  width="20"
                  height="20"
                  viewBox="0 0 20 20"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM15 11H11V15H9V11H5V9H9V5H11V9H15V11Z"
                    fill="#4D7D6B"
                  />
                </svg>
              </Stack>
            </Stack>
            <Stack
              onClick={() => {
                setCheckout(true);
                setCheckoutAccount(Number(element.price) * count);
              }}
              sx={{
                fontSize: "13px",
                fontWeight: 500,
                padding: "4px 10px 4px 10px",
                backgroundColor: "rgba(77, 125, 107, 1)",
                color: "rgba(255, 255, 255, 1)",
                height: "30px",
                alignItems: "center",
                justifyContent: "center",
                borderRadius: "100px",
                fontFamily: "Poppins",
                cursor: "pointer",
              }}
            >
              ADD FOR â‚¬ {Number(element.price) * count}
            </Stack>
          </Stack>
        </CardAdd>
      ) : (
        <Stack></Stack>
      )}
    </CardItem>
  );
};

const CardItem = styled(Card)({
  cursor: "pointer",
  padding: "12px",
  borderRadius: "15px",
  backgroundColor: "rgba(248, 248, 248, 1)",
});

const CardAdd = styled(Card)({
  backgroundColor: "rgba(76, 175, 80, 0.08)",
  padding: "12px",
});

const FormInput = styled(OutlinedInput)({
  height: "40px",
  borderRadius: "20px",
  backgroundColor: "rgba(76, 175, 80, 0.01)",
  "& .MuiInputBase-root:focus": {
    outline: "none",
  },
  "& input": {
    border: "none",
  },
  "& input::placeholder": {
    fontSize: "12px",
    fontFamily: "DM Sans",
  },
  "& input:focus": {
    outline: "none",
  },
  "&:focus": { outline: "none" },
});

const Item = styled(Stack)({
  height: '25px',
  flexDirection: "row",
  justifyContent: "space-between",
  color: "rgba(0, 0, 0, 0.6)",
  fontFamily: "DM Sans",
  alignItems: "center",
});

const Price = styled(Typography)({
  alignItems: "center",
  justifyContent: "center",
  fontFamily: "DM Sans",
  fontSize: "14px",
});

const Icons = styled(Stack)({
  display: "flex",
  justifyContent: "flex-start",
  marginBottom: "10px",
});
